<style>
  /* Reduce el tamaño de la fuente en los encabezados de la tabla */
  table th {
    font-size: calc(1em - 1px);
  }

  /* Reduce el tamaño de la fuente en las celdas de la tabla */
  table td {
    font-size: calc(1em - 1px);
  }

  /* Aplica un padding más compacto para las celdas de la tabla */
  table th,
  table td {
    padding: 4px 8px;
    /* Ajusta estos valores según lo necesites */
  }
</style>

<div class="conatiner-fluid content-inner mt-n5 py-0">
  <div>
    <div class="row">
      <div class="col-sm-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="card-title">Lista de personal</h4>
            <button type="button" id="nextBtn" class="btn btn-primary action-button" value="Next"
              onclick="window.location.href='/agregar-personal'">
              Agregar Personal
            </button>
          </div>

          <div class="card-body px-0">
            <table id="listaAdmin" class="datatable table table-striped text-responsive" style="width:100%;">
              <thead>
                <tr class="ligth">
                  <th></th>
                  <th>Nombre</th
                  <th>ID</th>
                  <th>Imagen</th>
                  <th>Rfc</th>
                  <th>Edad</th>
                  <th>Teléfono</th>
                  <th>Correo</th>
                  <th>Cargo</th>
                  <th style="min-width: 100px">Acción</th>
                </tr>
              </thead>
              <tbody>
                <a class="btn btn-sm btn-icon btn-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete"  href="#">
                  <span class="btn-inner">
                     <svg class="icon-20" width="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="currentColor">
                        <path d="M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                        <path d="M20.708 6.23975H3.75" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                        <path d="M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                     </svg>
                  </span>
               </a>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Modal para editar personal -->
<div class="modal fade" id="editarModal" tabindex="-1" aria-labelledby="editarModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg"> <!-- Puedes ajustar el tamaño del modal -->
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editarModalLabel">Editar Información</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body" id="editarModalBody">
        <!-- Aquí se cargará el formulario de edición -->
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Seleccionar todos los botones de editar
    const editButtons = document.querySelectorAll('.editar-btn');

    editButtons.forEach(function (button) {
      button.addEventListener('click', function (e) {
        e.preventDefault(); // Prevenir el comportamiento por defecto del <a>

        const personalId = this.getAttribute('data-id');

        // Hacer una solicitud AJAX para obtener el formulario
        fetch(`/editar-personal/${personalId}`, {
          headers: {
            'X-Requested-With': 'XMLHttpRequest', // Indicar que es una solicitud AJAX
          },
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error('Error en la respuesta de la red');
            }
            return response.text();
          })
          .then((html) => {
            // Insertar el formulario en el modal
            document.getElementById('editarModalBody').innerHTML = html;

            // Mostrar el modal
            const modalEditarPersonal = new bootstrap.Modal(document.getElementById('editarModal'));
            modalEditarPersonal.show();

            // Agregar listener al formulario para manejar el envío
            const form = document.getElementById('formEditarPersonal');
            form.addEventListener('submit', function (e) {
              e.preventDefault(); // Prevenir el comportamiento por defecto

              // Obtener los datos del formulario
              const formData = new FormData(form);

              // Convertir FormData a un objeto simple
              const data = {};
              formData.forEach((value, key) => {
                data[key] = value;
              });

              console.log('Datos a enviar:', data); // Para depuración

              // Hacer una solicitud AJAX para enviar los datos en formato JSON
              fetch(form.action, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
              })
                .then((response) => response.json())
                .then((data) => {
                  if (data.success) {
                    // Cerrar el modal
                    modalEditarPersonal.hide();

                    // Actualizar la tabla o notificar al usuario
                    alert(data.message);
                    location.reload(); // Recargar la página para ver los cambios
                  } else {
                    alert(data.message); // Mostrar el mensaje de error
                  }
                })
                .catch((error) => {
                  console.error('Error al enviar el formulario:', error);
                  alert('Ocurrió un error al procesar la solicitud.');
                });
            });
          })
          .catch((error) => {
            console.error('Error al cargar el formulario de edición:', error);
            alert('Ocurrió un error al cargar el formulario de edición.');
          });
      });
    });
  });
</script>